@using Ppgz.Repository
@{
    ViewBag.Title = "Administración de Citas - Vista Diaria - Intercambio de rieles";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var horarioRieles = (List<horarioriele>)ViewBag.HorarioRieles;

    var horarios = horarioRieles.Select(hr => new
    {
        hr.horario
    }).Distinct().ToList().OrderBy(h => h.horario.Id);

    var andenes = horarioRieles.Select(hr => new
    {
        hr.riele.andene
    }).Distinct().ToList().OrderBy(a => a.andene.Codigo);

    var citas = horarioRieles.Where(hr => hr.CitaId != null).Select(hr => hr.cita).Distinct().ToList();

    var totalCantidad = citas.Sum(c => c.CantidadTotal);
    var horariobase = horarios.FirstOrDefault().horario;
    var numrieles = horarioRieles.Where(hr => hr.CitaId != null).ToList();
    var numrieles1 = horarioRieles.Where(hr => hr.ComentarioBloqueo != "bloqueado" && hr.ComentarioBloqueo != null && hr.ComentarioBloqueo != "BLOQUEADO").ToList();
    var disponible = horarioRieles.Where(hr => hr.Disponibilidad == true).ToList();
    var disponible1 = horarioRieles.Where(hr => hr.ComentarioBloqueo != "BLOQUEADO" & hr.ComentarioBloqueo != "bloqueado" & hr.Disponibilidad == false & hr.ComentarioBloqueo != null).ToList();
    var totalrieles = numrieles.Count() + disponible.Count() + disponible1.Count();
    var capacidadmax = numrieles.Count() + numrieles1.Count();
    var cantidadBloqueada = 0;
}
<style>
    .body-content {
        max-width: 100% !important;
        width: 100% !important;
    }
</style>

<h2>@ViewBag.Title</h2>
<p class="page-description-title">
    <i class="fa fa-envelope" aria-hidden="true"></i> <i>Puede modificar los rieles ocupados por la cita</i>

</p>

<div class="panel panel-default">
    <div class="panel-heading">Seleccione la Fecha</div>
    <div class="panel-body">

        @using (Html.BeginForm("Enroque1", "AdministrarCitasCompradores", new { ViewBag.ReturnUrl }, FormMethod.Get, new { @id = "form-fecha", @class = "form-horizontal", role = "form" }))
        {

            @Html.ValidationSummary(true)

            <div class="">
                <label class="col-lg-1 col-sm-1 control-label"> Fecha</label>
                <div class="col-lg-2 col-sm-2">
                    <input type="text" class="form-control" name="fecha" id="fecha" placeholder="Fecha" />
                </div>
                <label class="col-lg-2 col-sm-2 control-label"> Cantidad a Descargar</label>
                <div class="col-lg-2 col-sm-1">
                    <h3 style="margin-top: 4px;" id="hDescargar"></h3>
                </div>
                <label class="col-lg-2 col-sm-3 control-label">Porcentaje de ocupación:</label>
                <div class="col-lg-2 col-sm-2">
                    <h3 style="margin-top: 4px;" id="hPorcentaje"></h3>
                </div>

            </div>

        }
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">Rieles por Anden</div>
    <div class="panel-body">
        <table class="" width="100%" id="tb-3" style="">
            <thead>
                <tr>
                    <th class="text-center">
                        <h3>Horario</h3>
                    </th>
                    @foreach (var result in andenes)
                    {
                        var anden = result.andene;

                        var borderRight = "";
                        if (int.Parse(anden.Anden) < andenes.Count())
                        {
                            borderRight = "solid 1px #666";
                        }
                        <th class="text-center" colspan="2" style="border-right: @borderRight">
                            <i class="fa fa-truck fa-5x" aria-hidden="true"></i>
                            ANDEN @anden.Anden
                            <div class="row">
                                @foreach (var riel in anden.rieles)
                                {
                                    <div class="col-xs-6">Riel @riel.Riel</div>

                                }
                            </div>
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var result in horarios)
                {
                    <tr class="border-bottom">

                        @{
                            var horario = result.horario;
                            var rieles = horarioRieles.Where(hr => hr.HorarioId == horario.Id).ToList();

                            var rielPostition = 0;

                            var tdWidth = Convert.ToInt32(100 / rieles.Count) + "%";
                        }

                        <td class="text-center vert-align">@horario.HoraDesde <br> - <br /> @horario.HoraHasta</td>

                        @foreach (var riel in rieles)
                        {
                            rielPostition++;

                            var borderRight = "";
                            if (rielPostition < rieles.Count())
                            {
                                borderRight = "solid 1px #666";
                            }


                            var btnText = "<strong>DISPONIBLE</strong>";
                            var btnClass = "btn-primary";



                            if (!riel.Disponibilidad)
                            {
                                if (riel.cita != null)
                                {
                                    var crossDockLabel = "";
                                    var tiendasAlmacen = "Almacén: " + riel.cita.Almacen;
                                    if (riel.cita.Almacen.ToUpper() == "Cross Dock")
                                    {
                                        crossDockLabel = "<span class='label label-default' style='background-color: #293129;'>Cross Dock</span >";
                                        var tiendas = riel.cita.asns.Select(asn => asn.Tienda).Distinct().ToArray();
                                        tiendasAlmacen = "Tiendas: " + String.Join("-", tiendas);
                                    }

                                    btnText = string.Format(
                                        @"<div style='font-weight: 1.5em'>Cita #{0} {1}</div>
                                                      <hr style='margin:0; margin-top: 2px;'>
                                                    <div style='word-wrap: break-word;white-space: normal;' class=''>{2}</div>
                                                    <div style='word-wrap: break-word;white-space: normal;background: #407b40;color:#fff; padding: 5px;'>{3}
                                                    </div>
                                                    <div>Total: {4} Pares</div>
                                                    <div>{5}</div>",
                                        riel.cita.Id, crossDockLabel,
                                        string.Format("{0} {1} {2} {3}", riel.cita.proveedore.Nombre1, riel.cita.proveedore.Nombre2,
                                        riel.cita.proveedore.Nombre3, riel.cita.proveedore.Nombre4),
                                        tiendasAlmacen, riel.cita.CantidadTotal, riel.cita.TipoCita);

                                    btnClass = "btn-success";
                                }
                                else
                                {
                                    btnClass = "btn-danger";

                                    if (riel.ComentarioBloqueo != null)
                                    {
                                        int bloqueo = 0;
                                        string[] split = riel.ComentarioBloqueo.Split(new Char[] { '#' });
                                        if (split.Length > 2)
                                        {
                                            split[1] = split[1].Replace(",", "");
                                            split[1] = split[1].Replace(" ", "");
                                            if (String.IsNullOrEmpty(split[1]) || String.IsNullOrWhiteSpace(split[1]))
                                            {
                                                split[1] = "0";
                                            }
                                            int.TryParse(split[1], out bloqueo);
                                        }

                                        cantidadBloqueada += bloqueo;
                                        btnText = string.Format("<p style='word-wrap: break-word;white-space: normal;'>{0}</p><hr style='margin:0'>", riel.ComentarioBloqueo);
                                    }
                                    else
                                    {
                                        btnText = string.Format("<strong>BLOQUEADO</strong>");
                                    }
                                }
                            }

                            <td class="text-center" width="@tdWidth" style="border-right: @borderRight;">

                                <button id="@riel.Id" data-citaid="@riel.CitaId" type="button" style="min-height: 80px;" class="btn btn-xs @btnClass btn-riel ">
                                    @Html.Raw(btnText)
                                </button>

                            </td>

                        }

                    </tr>
                }
            </tbody>
        </table>

    </div>
</div>


@section Scripts {

    @Scripts.Render("https://cdnjs.cloudflare.com/ajax/libs/jquery-sortable/0.9.13/jquery-sortable-min.js");

    <script type="text/javascript">

        var url = "@Url.Action("Enroque1", "AdministrarCitasCompradores")";
        var rielesSeleccionados = [];

        $(document).ready(function () {
            var descargar = @totalCantidad + @cantidadBloqueada;
           var per = @capacidadmax /  @totalrieles *100;
            var text = per.toFixed(2) + " %";
            $('#hPorcentaje').text(text);
            $('#hDescargar').text(descargar);

            $('#fecha').datetimepicker({
                locale: 'es',
                format: 'DD/MM/YYYY',
                defaultDate: '@ViewBag.Fecha'
            });

            $("#fecha").on("dp.change", function () {
                $("#form-fecha").submit();
            });

            $(".btn-riel").each(function () {
                var btn = $(this);
                var td = $(btn.parent());
                var parentHeight = td.height();
                //btn.css("height", parentHeight);
                //btn.css("margin", "10px");
                btn.css("width", "180px");
            });




            $(".btn-riel").each(function () {
                var btn = $(this);
                var td = $(btn.parent());
                var parentHeight = td.height();
                btn.css("height", parentHeight);
            });

            $(".btn-riel").each(function () {
                var btn = $(this);
                 btn.css("margin", "5px");
            });

            $('.btn-riel').on('click', function() {

                if (!$(this).hasClass("active")) {
                    $(this).addClass("active");
                } else {
                    $(this).removeClass("active");
                }

                var horarioRielId = $(this).attr("id");

                if ($(this).hasClass("active")) {

                    if (rielesSeleccionados.indexOf(horarioRielId) === -1) {
                        rielesSeleccionados.push(horarioRielId);
                    }
                } else {
                    rielesSeleccionados.splice(rielesSeleccionados.indexOf(horarioRielId), 1);
                }

                if (rielesSeleccionados.length === 2) {
                    var citaId1 = $("#" + rielesSeleccionados[0]).data("citaid");
                    var citaId2 = $("#" + rielesSeleccionados[1]).data("citaid");

                    if ((citaId1 === "") && (citaId2 === "")) {
                        LimpiarSelecciones();
                        //msgError("Para hacer el Enroquese al menos 1 riel debe estar ocupado.");

                    } else {

                        $("#modal-enroque input[name='horarioRielId1']").val(rielesSeleccionados[0]);
                        $("#modal-enroque input[name='horarioRielId2']").val(rielesSeleccionados[1]);

                       // $("#modal-enroque .aplicar-enroque-button ").attr("href", url + "?horarioRielId1=" + rielesSeleccionados[0] + "&horarioRielId2=" + rielesSeleccionados[1]);
                        $("#modal-enroque").modal('show');

                    }
                }
            });

            $('#modal-enroque ').on('hidden.bs.modal', function() {
                LimpiarSelecciones();
            });


        });

        function LimpiarSelecciones() {
            $("#" + rielesSeleccionados[0]).removeClass('active');
            $("#" + rielesSeleccionados[1]).removeClass('active');
            rielesSeleccionados = [];
        }

    </script>
}