@using Ppgz.CitaWrapper
@using Ppgz.Repository
@using Ppgz.Web.Areas.Mercaderia
@using System.Web.Script.Serialization;
@using System.Data.Entity;
@using System.Linq;
@using Ppgz.Web.Infrastructure;
@{
    ViewBag.Title = "Verificación de Disponibilidad";
    ViewBag.Descripcion = "Verifique el espacio disponible para su cita y seleccione el dia mas adecuado";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var currentCita = (CurrentCita)ViewBag.CurrentCita;

    var fechaCita = ViewBag.date;

    var horarioRieles = (List<horarioriele>)ViewBag.HorarioRieles;

    var fechas = (List<DateTime>)ViewBag.Fechas;

    var horarios = horarioRieles.Select(hr => new
    {
        hr.horario
    }).Distinct().ToList().OrderBy(h => h.horario.Id);

    var andenes = horarioRieles.Select(hr => new
    {
        hr.riele.andene
    }).Distinct().ToList().OrderBy(a => a.andene.Codigo);

    var jsonSerialiser = new JavaScriptSerializer();
    var Fechasjson = jsonSerialiser.Serialize(fechas);

    //var rielesNecesarios = RulesManager.GetCantidadRieles(currentCita.Cantidad);

}
<link href="~/assets/vendor/bootstrap-toggle-master/css/bootstrap-toggle.min.css" rel="stylesheet" />
<style>
    #tb-3 .btn {
        font-size: .9em;
    }

    #tb-3 .border-bottom {
        border-bottom: solid 1px #f1f1f1;
    }

    .table-rieles .btn-primary.hover, .table-rieles .btn-primary:hover, .table-rieles .open > .dropdown-toggle.btn-primary {
        background-color: #66aaaa;
        border-color: #ccc;
        background-image: none;
    }

    .table-rieles .btn-primary.active, .table-rieles .btn-primary.hover, .table-rieles .btn-primary:hover, .table-rieles .btn-primary:active, .table-rieles .open > .dropdown-toggle.btn-primary {
        background-color: #66aaaa;
        border-color: #ccc;
        background-image: none;
    }
</style>

<h2>@ViewBag.Title</h2>
<p class="page-description-title">
    <i class="fa fa-calculator" aria-hidden="true"></i> <i>@ViewBag.Descripcion</i>
</p>

<div class="panel panel-default">
    <div class="panel-heading">Datos de la cita</div>
    <div class="panel-body">
        <div class="row">
            <label class="col-sm-2 control-label">Proveedor</label>
            <div class="col-sm-6">
                <div>@currentCita.Proveedor.Rfc - @currentCita.Proveedor.Nombre1</div>
            </div>
        </div>
        <div class="row">
            <label class="col-sm-2 control-label">Fecha de la cita</label>
            <div class="col-sm-4">
                <div>@fechaCita.ToString("dd/MM/yyyy")</div>
            </div>


            <div class="col-sm-4">
                @using (Html.BeginForm("VisualizarDisponibilidad", "ControlCitasMenores", new { ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "formu" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true)
                    @Html.Hidden("fechaspermitidas", @Fechasjson)
                    @Html.Hidden("numeroDocumento", (string)@ViewBag.NumeroDocumento)
                    <div class="form-group">
                        <label class="col-sm-4 control-label">Cambiar Fecha</label>
                        <div class="col-sm-7">
                            <input type="text" class="form-control" value="@fechaCita.ToString("dd/MM/yyyy")" name="fecha" id="fecha" placeholder="Fecha" required />
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-sm-offset-4 col-sm-7">
                            <button type="submit" class="btn btn-primary btn-block"><i class="fa fa-arrow-right" aria-hidden="true" data-toggle="confirmation" data-btn-ok-label="Si" data-title="¿Está seguro?" data-content="La fecha de la cita no podrá ser modificada luego de este paso."></i> Siguiente</button>
                        </div>
                    </div>

                }
            </div>




        </div>
        <div class="row">

            @using (Html.BeginForm("AgregarPrimeraOrden", "ControlCitasMenores", new { ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "formue" }))
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true)
                @Html.Hidden("numeroDocumento", (string)@ViewBag.NumeroDocumento)

                <input type="hidden" class="form-control" value="@fechaCita.ToString("dd/MM/yyyy")" name="fecha" />

                <div class="form-group">
                    <div class="col-sm-5" style="margin-left: 10px;">
                        <button type="submit" class="btn btn-success btn-block"><i class="fa fa-arrow-right" aria-hidden="true" data-toggle="confirmation" data-btn-ok-label="Si" data-title="¿Está seguro?" data-content="La fecha de la cita no podrá ser modificada luego de este paso."></i> Siguiente</button>
                    </div>
                </div>

            }
        </div>



    </div>
</div>



<div class="panel panel-default">
    <div class="panel-heading">Rieles Disponibles</div>
    <div class="panel-body">

        <table class="table-rieles" width="100%" id="tb-3" style="">
            <thead>
                <tr>
                    <th class="text-center">
                        <h2>Horario</h2>
                    </th>
                    @foreach (var result in andenes)
                    {
                        var anden = result.andene;

                        var borderRight = "";
                        if (int.Parse(anden.Anden) < andenes.Count())
                        {
                            borderRight = "solid 1px #666";
                        }
                        <th class="text-center" colspan="2" style="border-right: @borderRight">
                            <i class="fa fa-truck fa-5x" aria-hidden="true"></i>
                            ANDEN @anden.Anden
                            <div class="row">
                                @foreach (var riel in anden.rieles)
                                {
                                    <div class="col-xs-6">Riel @riel.Riel</div>

                                }
                            </div>
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var result in horarios)
                {
                    <tr class="border-bottom">

                        @{
                            var horario = result.horario;
                            var rieles = horarioRieles.Where(hr => hr.HorarioId == horario.Id);

                            var rielPostition = 0;
                        }

                        <td class="text-center vert-align">@horario.HoraDesde - @horario.HoraHasta</td>

                        @foreach (var riel in rieles)
                        {
                            rielPostition++;

                            var borderRight = "";
                            if (rielPostition < rieles.Count())
                            {
                                borderRight = "solid 1px #666";
                            }
                            var resul = CommonManager.GetConfiguraciones().Single(c => c.Clave == "warehouse.min-pairs.per-meet");
                            var par = Convert.ToInt32(resul.Valor);
                            var Total = par - riel.CantidadTotal;
                            var disabledChecked = "";
                            var dataOff = "Disponible:";
                            var dataOn = "MI RESERVA";
                            var offStyle = "primary";
                            var onStyle = "success";
                            var disponibleClass = "riel-disponible";
                            var db = new Entities();
                            var t = riel.CantidadTotal + currentCita.Cantidad;
                            if (t < par && riel.Disponibilidad == false && riel.CitaId != null)
                            {
                                if (t < par && riel.Disponibilidad == false && riel.Citas != null)
                                {

                                    disabledChecked = "disabled";
                                    //dataOn = "OCUPADO";
                                    dataOff = "Disponible:" + Total;
                                    //onStyle = "danger";
                                    offStyle = "primary";
                                    disponibleClass = "";


                                }
                                else
                                {


                                    disabledChecked = "disabled";
                                    //dataOn = "OCUPADO";
                                    dataOff = "OCUPADO";
                                    //onStyle = "danger";
                                    offStyle = "danger";
                                    disponibleClass = "";

                                    if (riel.CantidadTotal == 0 && riel.Disponibilidad == true)
                                    {
                                        disabledChecked = "disabled";
                                        //dataOn = "OCUPADO";
                                        dataOff = "hjjjh:" + Total;
                                        //onStyle = "danger";
                                        offStyle = "warning";
                                        disponibleClass = "";
                                    }
                                    else
                                    {
                                        if (riel.Disponibilidad == true && riel.Citas == null)
                                        {

                                            disabledChecked = "disabled";
                                            //dataOn = "OCUPADO";
                                            dataOff = "OCUPADO";
                                            //onStyle = "danger";
                                            offStyle = "danger";
                                            disponibleClass = "";
                                        }

                                    }

                                }
                            }
                            else
                            {
                                disabledChecked = "disabled";
                                //dataOn = "OCUPADO";
                                dataOff = "OCUPADO";
                                //onStyle = "danger";
                                offStyle = "danger";
                                disponibleClass = "";

                                if (riel.CantidadTotal == 0 && riel.Disponibilidad == true)
                                {
                                    disabledChecked = "disabled";
                                    //dataOn = "OCUPADO";
                                    dataOff = "Disponible:" + Total;
                                    //onStyle = "danger";
                                    offStyle = "warning";
                                    disponibleClass = "";
                                }
                                else
                                {
                                    if (riel.Disponibilidad == true && riel.CitaId == null)
                                    {

                                        disabledChecked = "disabled";
                                        //dataOn = "OCUPADO";
                                        dataOff = "OCUPADO";
                                        //onStyle = "danger";
                                        offStyle = "danger";
                                        disponibleClass = "";
                                    }

                                }

                            }

                            <td class="text-center" style="border-right: @borderRight">
                                <input id="@riel.Id" class="horarioriel @disponibleClass" type="checkbox" @disabledChecked data-toggle="toggle" data-on="@dataOn" data-off="@dataOff" data-onstyle="@onStyle" data-height="40" data-width="100px" data-offstyle="@offStyle">

                            </td>

                        }

                        @*<td class="text-center" style="border-right: solid 1px #666">
                                <input type="checkbox" data-toggle="toggle" data-on="MI RESERVA" data-off="DISPONIBLE" data-onstyle="success" data-height="40" data-width="100px" data-offstyle="primary"></td>
                            <td class="text-center" style="border-right: solid 1px #666">
                                <input type="checkbox" data-toggle="toggle" data-on="MI RESERVA" data-off="DISPONIBLE" data-onstyle="success" data-height="40" data-width="100px" data-offstyle="primary"></td>
                            <td class="text-center" style="border-right: solid 1px #666">
                                <input type="checkbox" data-toggle="toggle" data-on="MI RESERVA" data-off="DISPONIBLE" data-onstyle="success" data-height="40" data-width="100px" data-offstyle="primary"></td>
                            <td class="text-center" style="border-right: solid 1px #666">
                                <input type="checkbox" data-toggle="toggle" data-on="MI RESERVA" data-off="DISPONIBLE" data-onstyle="success" data-height="40" data-width="100px" data-offstyle="primary"></td>
                            <td class="text-center" style="border-right: solid 1px #666">
                                <input type="checkbox" data-toggle="toggle" data-on="MI RESERVA" data-off="DISPONIBLE" data-onstyle="success" data-height="40" data-width="100px" data-offstyle="primary"></td>
                            <td class="text-center">
                                <input type="checkbox" data-toggle="toggle" data-on="MI RESERVA" data-off="DISPONIBLE" data-onstyle="success" data-height="40" data-width="100px" data-offstyle="primary"></td>*@
                    </tr>
                }
            </tbody>
        </table>
        @using (Html.BeginForm("Agendar", "ControlCitasMenores", new { }, FormMethod.Post, new { id = "form-agendar" }))
        {
            @Html.AntiForgeryToken()

        }


    </div>
</div>
@section Scripts {
    @Scripts.Render("~/assets/vendor/bootstrap-toggle-master/js/bootstrap-toggle.min.js")
    <script>
        $(document).ready(function () {
            $('#formu').validator();
        });


        $('#fecha').datetimepicker({
            locale: 'es',
            format: 'DD/MM/YYYY',
            enabledDates: [
                @foreach (var fecha in fechas)
                {
                    <text>
                    "@fecha.ToString("yyyy-MM-dd")",
                    </text>
                }
        ]


    });
    </script>

    <script type="text/javascript">
        var rielesNecesarios = 22;
        var rielesSeleccionados = [];
        var enviado = false;
        $(function() {
            $('.btn-agendar').click(function() {

                // TODO MEJORAR
                if (rielesSeleccionados.length === rielesNecesarios) {

                    if (enviado) {

                        msgError("Por favor espere, se esta procesando el registro anterior.");
                        return;
                    }


                    for (var i = 0; i < rielesNecesarios; i++) {
                        $('<input>').attr({
                            type: 'hidden',
                            name: 'rielesIds',
                            value: rielesSeleccionados[i]
                        }).appendTo('#form-agendar');
                    }

                    $("#form-agendar").submit();

                    $(this).attr("disabled", "disabled");

                    $(this).unbind();

                    $(this).off();

                    enviado = true;


                    $.blockUI({ message: '<h2>Por favor espere...</h2>' });


                } else {
                    msgError("Por favor verifique su selección");

                }


            });

            CargarEventoSeleccion();
            VerificarRieles();

        });


        function comprometerRiel(horarioRielId) {
            if (rielesSeleccionados.indexOf(horarioRielId) === -1) {
                rielesSeleccionados.push(horarioRielId);
            }


            $("#" + horarioRielId).addClass("usado");
        }

        function liberarRiel(horarioRielId) {

            if (rielesSeleccionados.indexOf(horarioRielId + "") > -1) {
                rielesSeleccionados.splice(rielesSeleccionados.indexOf(horarioRielId + ""), 1);
            }

            $("#" + horarioRielId).removeClass("usado");

        }

        function VerificarSelecciones() {
            if (rielesSeleccionados.length === rielesNecesarios) {
                $('.riel-disponible:not(.usado)').bootstrapToggle('disable');
            } else {

                $('.riel-disponible:not(.usado)').bootstrapToggle('enable');
            }
        }

        function CargarEventoSeleccion() {

            $('.riel-disponible').change(function () {

                var horarioRielId = $(this).attr("id");

                if ($(this).prop('checked') === true) {

                    comprometerRiel(horarioRielId);

                    $(this).addClass("usado");
                } else {
                    liberarRiel(horarioRielId);
                }
                VerificarSelecciones();

            });
        }

        function RefrescarRiel(currentValue) {

            var input = $("#" + currentValue.Id);

            if (currentValue.Disponibilidad) {

                input.attr("data-off", "DISPONIBLE");
                input.attr("data-offstyle", "primary");

                input.addClass("riel-disponible");
                input.bootstrapToggle('disable');

            } else {

                input.prop('checked', false);

                liberarRiel(currentValue.Id);
                input.attr("data-off", "OCUPADO");
                input.attr("data-offstyle", "danger");
                input.removeClass("riel-disponible");
                input.bootstrapToggle('disable');
            }
        }


        function VerificarRieles() {

            var data = {
                fecha: "@fechaCita.ToString("ddMMyyyy")"
            };

            $.ajax({
                type: "POST",
                url: "@Url.Action("VerificarRieles", "ControlCitasMenores")",
                data: data,
                cache: false
            }).done(function (result) {

                setTimeout(function () { VerificarRieles(); }, 10000);

                $(".riel-disponible").unbind();

                result.forEach(RefrescarRiel);
                $(".horarioriel").bootstrapToggle('destroy');
                $(".horarioriel").bootstrapToggle();
                CargarEventoSeleccion();
                VerificarSelecciones();
            }).fail(function (response) {
                console.log(response);

            });

        }
    </script>
}
