//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ppgz.Repository
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<cita> citas { get; set; }
        public virtual DbSet<configuracione> configuraciones { get; set; }
        public virtual DbSet<cuentaproveedore> cuentaproveedores { get; set; }
        public virtual DbSet<cuenta> cuentas { get; set; }
        public virtual DbSet<cuentasmensaje> cuentasmensajes { get; set; }
        public virtual DbSet<cuentasxpagar> cuentasxpagars { get; set; }
        public virtual DbSet<fakedataproveedor> fakedataproveedors { get; set; }
        public virtual DbSet<mensaje> mensajes { get; set; }
        public virtual DbSet<perfile> perfiles { get; set; }
        public virtual DbSet<proveedore> proveedores { get; set; }
        public virtual DbSet<tipocuenta> tipocuentas { get; set; }
        public virtual DbSet<tipousuario> tipousuarios { get; set; }
        public virtual DbSet<pago> pagos { get; set; }
        public virtual DbSet<vwmensaje> vwmensajes { get; set; }
    
        public virtual int add_user(string email, string passwordHash, string phoneNumber, string pUserName, string tipo, string nombre, string apellido, string cargo, Nullable<int> perfilId, Nullable<System.DateTime> terminosCondicionesFecha, Nullable<int> usuarioIdTx, Nullable<int> cuentaId, ObjectParameter userId, ObjectParameter messageError)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordHashParameter = passwordHash != null ?
                new ObjectParameter("PasswordHash", passwordHash) :
                new ObjectParameter("PasswordHash", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var pUserNameParameter = pUserName != null ?
                new ObjectParameter("pUserName", pUserName) :
                new ObjectParameter("pUserName", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var cargoParameter = cargo != null ?
                new ObjectParameter("Cargo", cargo) :
                new ObjectParameter("Cargo", typeof(string));
    
            var perfilIdParameter = perfilId.HasValue ?
                new ObjectParameter("PerfilId", perfilId) :
                new ObjectParameter("PerfilId", typeof(int));
    
            var terminosCondicionesFechaParameter = terminosCondicionesFecha.HasValue ?
                new ObjectParameter("TerminosCondicionesFecha", terminosCondicionesFecha) :
                new ObjectParameter("TerminosCondicionesFecha", typeof(System.DateTime));
    
            var usuarioIdTxParameter = usuarioIdTx.HasValue ?
                new ObjectParameter("UsuarioIdTx", usuarioIdTx) :
                new ObjectParameter("UsuarioIdTx", typeof(int));
    
            var cuentaIdParameter = cuentaId.HasValue ?
                new ObjectParameter("CuentaId", cuentaId) :
                new ObjectParameter("CuentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("add_user", emailParameter, passwordHashParameter, phoneNumberParameter, pUserNameParameter, tipoParameter, nombreParameter, apellidoParameter, cargoParameter, perfilIdParameter, terminosCondicionesFechaParameter, usuarioIdTxParameter, cuentaIdParameter, userId, messageError);
        }
    
        public virtual int populate_pagos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("populate_pagos");
        }
    }
}
